<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Tiffany Tung</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Tiffany Tung</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 13 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python</title>
      <link>/blog/python/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/python/</guid>
      <description>library(reticulate) The function below takes a string of nucleotides as input and returns a dictionary with all 3-mers present in that string, and the number of times that each 3-mer occurs. Then the function was used to find the 3-mers in the DNA sequence my_seq1 defined below.
 my_seq1 = &amp;quot;ATCATCATG&amp;quot; my_seq2 = &amp;quot;CAGCCCAATCAGGCTCTACTGCCACTAAACTTACGCAGGATATATTTACGCCGACGTACT&amp;quot; result = {} for i in range(0, len(my_seq1)-2): mer = my_seq1[i:i+3] if mer in result: result[mer] += 1 else: result[mer] = 1 print(result) ## {&amp;#39;ATG&amp;#39;: 1, &amp;#39;CAT&amp;#39;: 2, &amp;#39;ATC&amp;#39;: 2, &amp;#39;TCA&amp;#39;: 2} result = {} for i in range(0, len(my_seq2)-2): mer = my_seq1[i:i+3] if mer in result: result[mer] += 1 else: result[mer] = 1 print(result) ## {&amp;#39;&amp;#39;: 49, &amp;#39;ATG&amp;#39;: 1, &amp;#39;ATC&amp;#39;: 2, &amp;#39;G&amp;#39;: 1, &amp;#39;CAT&amp;#39;: 2, &amp;#39;TG&amp;#39;: 1, &amp;#39;TCA&amp;#39;: 2} The function belowa takes FASTA file as input, opens that file, counts the number of sequences in the file (by counting the number of lines in the file that start with a “&amp;gt;” symbol), and returns the count.</description>
    </item>
    
  </channel>
</rss>